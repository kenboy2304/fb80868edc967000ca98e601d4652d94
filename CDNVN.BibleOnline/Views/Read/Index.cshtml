@model IEnumerable<CDNVN.BibleOnline.Models.Content>
@{
    var versions = (SelectList)ViewBag.Bible;
}
<section class="reading-header clearfix">
    <h1 class="reading-title"><i class="icon-book"></i>@ViewBag.Title</h1>
    <div class="reading-setting">
        <nav>
            <a href="#" class="pararell hide-phone" data-display="show">pararell</a>
            <a href="#" class="light">light</a>
            <a href="#" class="block">block</a>
            <a href="#" class="font-minus">font minus</a>
            <a href="#" class="font-add">font add</a>
        </nav>
    </div>
</section>

<section id="reading-content" class="block-content row">
    <div id="@Request.QueryString["v"]" class="version">
        <div class="select-version">
            <select name="v" id="v" data-width="100%">
                @foreach (var v in versions)
                {
                    <option value="@v.Value" selected="@v.Selected">@v.Text (@v.Value.ToUpper())</option>
                }
            </select>
        </div><!-- end .select-version -->
        @{ var chapter = 0; var temp="";}
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                if (chapter != item.Chapter)
                {
                    if (chapter != 0)
                    {
                        @Html.Raw("</div><!-- end .chapter -->")
                    }
                    
                    @Html.Raw("<div id='chapter-"+item.Chapter+"' class='chapter'>")
                }
                if (!string.IsNullOrWhiteSpace(item.Title))
                    {
                        @Html.Raw("<div class=\"sub-charter-title\">"+item.Title+"</div>")
                    }
                if (chapter != item.Chapter)
                {
                    @Html.Raw("<h1 class='chapter-stt'>"+item.Chapter+" </h1>")
                    chapter = item.Chapter;
                }    
                
                if (!string.IsNullOrWhiteSpace(item.Word))
                {
                    <span class="verse">
                        <sub @(!string.IsNullOrWhiteSpace(temp) ? Html.Raw("class=\"two\"") : Html.Raw(""))>@(!string.IsNullOrWhiteSpace(temp) ? Html.Raw(temp) : Html.Raw("")) @item.Verse</sub>
                        @Html.Raw(item.Word)
                    </span>
                    temp = "";
                }
                else
                {
                    temp = item.Verse.ToString()+"-";
                }
                
            }
        }
        @Html.Raw("</div><!-- end .chapter -->")
        <div class="loading" style="text-align: center; display: none;">
            <img src="@Url.Content("~/Content/image/ajax-loader.gif")"/>
        </div>
        <div class="error" style="text-align: center; display: none;">
            LỖI TẢI TRANG
        </div>
    </div><!-- .version -->
</section>

@section scripts
{
    <script type="text/javascript">
        function LoadBible($this,v) {
            $.ajax({
                url: '@Url.Action("Json")',
                data: JSON.stringify({ v: v, q: '@Request.QueryString["q"]' }),
                contentType: "application/json",
                traditional: true,
                type: "POST",
                beforeSend: function () {
                    $this.find('.loading').show();

                },
                success: function (r) {
                    var chapter = 0;
                    var html = "";
                    var temp = "";
                    for (var i = 0; i < r.length; i++) {
                        if (r[i].chapter != chapter) {
                            if (chapter != 0) {
                                html = html + "</div><!-- end .chapter -->";
                            }
                            html += "<div id='chapter-" + r[i].chapter + "' class='chapter'>";
                        }
                        if (r[i].title != "") {
                            html = html + "<div class=\"sub-charter-title\">" + r[i].title +"</div>";
                        }
                        if (r[i].chapter != chapter) {
                            html += "<h1 class='chapter-stt'>" + r[i].chapter + " </h1>";
                            chapter = r[i].chapter;
                        }
                        if (r[i].word != "") {

                            html += "<span class='verse'><sub " + (temp != 0 ? "class=\"two\"" : "") +">" +temp+ r[i].verse + " </sub>" + r[i].word + "</span>";
                            temp = "";
                        } else {
                            temp = r[i].verse+"-";
                        }
                    }
                    html = html + "</div><!-- end .chapter -->";
                    $this.find('.loading').before(html);
                    $this.find('.loading').hide();
                    $('#reading-content .verse').css({ 'font-size': current });
                },
                error: function () {
                    $('.loading').hide();
                    $('.error').show();
                }
            });
        }
        //
        $(document).ready(function () {
            $('.loading').hide();
            $('.error').hide();
            $('#formSearch').submit(function () {
                var key = $('#keyword').val();
                if (key.match(/\d+$/)) {
                    var url = window.location.pathname;
                    url = url + "?v=" + $('#version').val() + "&q=" + $('#keyword').val() + location.hash;
                    location.href = url;
                    //alert(url);
                    return false;
                } 
            });

            var version = location.hash;
            
            if (version != "") {
                version = version.replace("#", "");
                var html = $('.version').html();
                html = "<div class='version col-md-6 pararell-content'>" + html + "</div>";
                $('#reading-content').append(html);
                $('#reading-content .pararell-content').find("#v").val(version);
                $('#reading-content .pararell-content .chapter').remove();
                LoadBible($('#reading-content .pararell-content'), version);
                $('.reading-setting .pararell').attr("data-display", "hide");
                $('.version').addClass('col-md-6');
            }
            $('#reading-content').delegate('#v', 'change', function () {
                
                $this = $(this).parent().parent();
                if ($this.hasClass("pararell-content"))
                    location.hash = $(this).val();
                $this.find('.chapter').remove();
                LoadBible($this, $(this).val());
            });
        });
    </script>
}